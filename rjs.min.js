/*! micro-requirejs 2018-03-01 */

window.rjs=function(e,n){"use strict";var t={debug:!1},r=function(n){var t=e.document.createElement("link");return t.type="text/css",t.rel="stylesheet",t.href=n,t.async=!0,t},i=function(n){var t=e.document.createElement("script");return t.type="text/javascript",t.src=n,t.async=!0,t};return new function(){var n=new function(){return{eventStack:[],pendingListeners:[],reset:function(){this.eventStack=[],this.pendingListeners=[]},resolvePendingListeners:function(){var e=this;this.pendingListeners.forEach(function(n,t){n&&e.isEveryEventResolved(n.events)&&(n.handler(),delete e.pendingListeners[t])})},isEveryEventResolved:function(e){var n=this;return e.every(function(e){return-1!==n.eventStack.indexOf(e)})},trigger:function(e){t.debug&&console.log(">> `"+e+"` triggered"),this.eventStack.push(e),this.resolvePendingListeners()},on:function(n,r){if(t.debug&&console.log(">> `"+e.JSON.stringify(n)+"` subscribed"),!Array.isArray(n))throw new TypeError("The first parameter must an array");if("function"!=typeof r)throw new TypeError("The second parameter must a function");if(this.isEveryEventResolved(n))return r();this.pendingListeners.push({events:n,handler:r})}}},o=function(){"complete"===e.document.readyState||"loaded"===e.document.readyState?n.trigger("DOMContentLoaded"):e.document.addEventListener("DOMContentLoaded",function(){n.trigger("DOMContentLoaded")},!1)};return o(),{define:function(t,o,s,c){var d=function(e){var n=e.split(".").pop();switch(n){case"css":return r(e);case"js":return i(e)}throw new Error("Unknown file extension "+n)}(t.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,"")),a=c?s.bind(c):s;if("string"!=typeof o)throw new TypeError("You have to specify dependency name");e.document.body.appendChild(d),void 0===d.onload?d.onreadystatechange=function(){"loaded"===d.readyState&&(n.trigger(o),a&&a())}:d.onload=function(){n.trigger(o),a&&a()}},require:function(e,t,r){r&&(t=t.bind(r)),n.on(e,t)},init:function(e){t=e||{debug:!1},n.reset(),o()}}}}(this);